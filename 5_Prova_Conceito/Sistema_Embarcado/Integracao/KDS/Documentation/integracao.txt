=============================================================================
List of generated methods in project: integracao

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "clockMan1" (component fsl_clock_manager)
   - clockMan1_CLOCK_SYS_SetOutDiv1 -Sets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_GetOutDiv1 -Gets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_SetOutDiv4 -Sets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_GetOutDiv4 -Gets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_SetOutDiv -Sets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetOutDiv -Gets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetPllFllClockFreq -Get the MCGPLLCLK/MCGFLLCLK/IRC48MCLK clock frequency.
   - clockMan1_CLOCK_SYS_SetPllfllSel -Set PLL/FLL clock selection.
   - clockMan1_CLOCK_SYS_GetPllfllSel -Get PLL/FLL clock selection.
   - clockMan1_CLOCK_SYS_GetFixedFreqClockFreq -Gets the MCGFFCLK clock frequency.
   - clockMan1_CLOCK_SYS_GetInternalRefClockFreq -Get internal reference clock frequency.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kFreq -Gets the external reference 32k clock frequency.
   - clockMan1_CLOCK_SYS_SetExternalRefClock32kSrc -Set the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kSrc -Get the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetOsc0ExternalRefClockFreq -Gets the OSC0ERCLK frequency.
   - clockMan1_CLOCK_SYS_GetRtcFreq -Gets RTC input clock frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutFreq -Gets RTC_CLKOUT frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_SetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_GetCopFreq -Gets the COP clock frequency.
   - clockMan1_CLOCK_SYS_GetLptmrFreq -Gets LPTMRx pre-scaler/glitch filter clock frequency.
   - clockMan1_CLOCK_SYS_GetTpmFreq -Gets TPM clock frequency.
   - clockMan1_CLOCK_SYS_SetTpmSrc -Set the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmSrc -Get the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmExternalFreq -Get the TPM external clock source frequency.
   - clockMan1_CLOCK_SYS_SetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_GetUsbfsFreq -Gets the clock frequency for USB FS OTG module.
   - clockMan1_CLOCK_SYS_SetUsbfsSrc -Set the selection of the clock source for the USB FS 48 MHz clock.
   - clockMan1_CLOCK_SYS_GetUsbfsSrc -Get the selection of the clock source for the USB FS 48 MHz clock.
   - clockMan1_CLOCK_SYS_GetSpiFreq -Gets the clock frequency for SPI module.
   - clockMan1_CLOCK_SYS_GetI2cFreq -Gets the clock frequency for I2C module.
   - clockMan1_CLOCK_SYS_GetLpsciFreq -Gets the clock frequency for LPSCI module.
   - clockMan1_CLOCK_SYS_SetLpsciSrc -Set the LPSCI clock source selection.
   - clockMan1_CLOCK_SYS_GetLpsciSrc -Get the LPSCI clock source selection.
   - clockMan1_CLOCK_SYS_GetUartFreq -Get the UART clock frequency.
   - clockMan1_CLOCK_SYS_GetAdcAltFreq -Gets ADC alternate clock frequency.
   - clockMan1_CLOCK_SYS_GetGpioFreq -Gets the clock frequency for GPIO module.
   - clockMan1_CLOCK_SYS_GetCmpFreq -Gets the clock frequency for CMP module.
   - clockMan1_CLOCK_SYS_GetPitFreq -Gets the clock frequency for PIT module.
   - clockMan1_CLOCK_SYS_GetFtfFreq -Gets the clock frequency for FTF module. (Flash Memory)
   - clockMan1_CLOCK_SYS_EnableDmaClock -Enable the clock for DMA module.
   - clockMan1_CLOCK_SYS_DisableDmaClock -Disable the clock for DMA module.
   - clockMan1_CLOCK_SYS_GetDmaGateCmd -Get the the clock gate state for DMA module.
   - clockMan1_CLOCK_SYS_EnableDmamuxClock -Enable the clock for DMAMUX module.
   - clockMan1_CLOCK_SYS_DisableDmamuxClock -Disable the clock for DMAMUX module.
   - clockMan1_CLOCK_SYS_GetDmamuxGateCmd -Get the the clock gate state for DMAMUX module.
   - clockMan1_CLOCK_SYS_EnablePortClock -Enable the clock for PORT module.
   - clockMan1_CLOCK_SYS_DisablePortClock -Disable the clock for PORT module.
   - clockMan1_CLOCK_SYS_GetPortGateCmd -Get the the clock gate state for PORT module.
   - clockMan1_CLOCK_SYS_EnableFtfClock -Enable the clock for FTF module.
   - clockMan1_CLOCK_SYS_DisableFtfClock -Disable the clock for FTF module.
   - clockMan1_CLOCK_SYS_GetFtfGateCmd -Get the the clock gate state for FTF module.
   - clockMan1_CLOCK_SYS_EnableAdcClock -Enable the clock for ADC module.
   - clockMan1_CLOCK_SYS_DisableAdcClock -Disable the clock for ADC module.
   - clockMan1_CLOCK_SYS_GetAdcGateCmd -Get the the clock gate state for ADC module.
   - clockMan1_CLOCK_SYS_EnableCmpClock -Enable the clock for CMP module.
   - clockMan1_CLOCK_SYS_DisableCmpClock -Disable the clock for CMP module.
   - clockMan1_CLOCK_SYS_GetCmpGateCmd -Get the the clock gate state for CMP module.
   - clockMan1_CLOCK_SYS_EnableDacClock -Enable the clock for DAC module.
   - clockMan1_CLOCK_SYS_DisableDacClock -Disable the clock for DAC module.
   - clockMan1_CLOCK_SYS_GetDacGateCmd -Get the the clock gate state for DAC module.
   - clockMan1_CLOCK_SYS_EnableTpmClock -Enable the clock for TPM module.
   - clockMan1_CLOCK_SYS_DisableTpmClock -Disable the clock for TPM module.
   - clockMan1_CLOCK_SYS_GetTpmGateCmd -Get the the clock gate state for TPM module.
   - clockMan1_CLOCK_SYS_EnablePitClock -Enable the clock for PIT module.
   - clockMan1_CLOCK_SYS_DisablePitClock -Disable the clock for PIT module.
   - clockMan1_CLOCK_SYS_GetPitGateCmd -Get the the clock gate state for PIT module.
   - clockMan1_CLOCK_SYS_EnableLptmrClock -Enable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_DisableLptmrClock -Disable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_GetLptmrGateCmd -Get the the clock gate state for LPTIMER module.
   - clockMan1_CLOCK_SYS_EnableTsiClock -Enable the clock for TSI module.
   - clockMan1_CLOCK_SYS_DisableTsiClock -Disable the clock for TSI module.
   - clockMan1_CLOCK_SYS_GetTsiGateCmd -Get the the clock gate state for TSI module.
   - clockMan1_CLOCK_SYS_EnableRtcClock -Enable the clock for RTC module.
   - clockMan1_CLOCK_SYS_DisableRtcClock -Disable the clock for RTC module.
   - clockMan1_CLOCK_SYS_GetRtcGateCmd -Get the the clock gate state for RTC module.
   - clockMan1_CLOCK_SYS_EnableUsbfsClock -Enable the clock for USBFS module.
   - clockMan1_CLOCK_SYS_DisableUsbfsClock -Disable the clock for USBFS module.
   - clockMan1_CLOCK_SYS_GetUsbfsGateCmd -Get the the clock gate state for USB module.
   - clockMan1_CLOCK_SYS_EnableSpiClock -Enable the clock for SPI module.
   - clockMan1_CLOCK_SYS_DisableSpiClock -Disable the clock for SPI module.
   - clockMan1_CLOCK_SYS_GetSpiGateCmd -Get the the clock gate state for SPI module.
   - clockMan1_CLOCK_SYS_EnableLpsciClock -Enable the clock for LPSCI module.
   - clockMan1_CLOCK_SYS_DisableLpsciClock -Disable the clock for LPSCI module.
   - clockMan1_CLOCK_SYS_GetLpsciGateCmd -Get the the clock gate state for LPSCI module.
   - clockMan1_CLOCK_SYS_EnableUartClock -Enable the clock for UART module.
   - clockMan1_CLOCK_SYS_DisableUartClock -Disable the clock for UART module.
   - clockMan1_CLOCK_SYS_GetUartGateCmd -Get the the clock gate state for UART module.
   - clockMan1_CLOCK_SYS_EnableI2cClock -Enable the clock for I2C module.
   - clockMan1_CLOCK_SYS_DisableI2cClock -Disable the clock for I2C module.
   - clockMan1_CLOCK_SYS_GetI2cGateCmd -Get the the clock gate state for I2C module.
   - clockMan1_CLOCK_SYS_SetUsbExternalFreq -Set the USB external clock frequency(USB_CLKIN).
   - clockMan1_CLOCK_SYS_SetTpmExternalFreq -Set the TPM external clock frequency(TPM_CLKx).
   - clockMan1_CLOCK_SYS_Init -Installs pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Sets the system clock configuration according to a pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Sets the system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Gets the current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Gets the callback which returns an error in the last clock switch.
   - clockMan1_CLOCK_SYS_BootToFee -Sets MCG to FEE mode during startup.
   - clockMan1_CLOCK_SYS_BootToFei -Sets MCG to FEI mode during startup.
   - clockMan1_CLOCK_SYS_BootToBlpi -Sets MCG to BLPI mode during startup.
   - clockMan1_CLOCK_SYS_BootToBlpe -Sets MCG to BLPE mode during startup.
   - clockMan1_CLOCK_SYS_BootToPee -Sets MCG to PEE mode during startup.
   - clockMan1_CLOCK_SYS_SetMcgMode -Sets MCG to a target mode.
   - clockMan1_CLOCK_SYS_SetSimConfigration -Sets the clock configuration in SIM module.
   - clockMan1_CLOCK_SYS_OscInit -Initializes the OSC.
   - clockMan1_CLOCK_SYS_OscDeinit -Deinitializes the OSC.
   - clockMan1_CLOCK_SYS_SetOscerConfigration -Configures the OSCERCLK.
   - clockMan1_CLOCK_SYS_RtcOscInit -Initializes the RTC OSC.
   - clockMan1_CLOCK_SYS_RtcOscDeinit -Deinitializes the RTC OSC.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.
   - clockMan1_CLOCK_SYS_GetCoreClockFreq -Gets the core clock frequency.
   - clockMan1_CLOCK_SYS_GetSystemClockFreq -Gets the system clock frequency.
   - clockMan1_CLOCK_SYS_GetBusClockFreq -Gets the bus clock frequency.
   - clockMan1_CLOCK_SYS_GetFlashClockFreq -Gets the flash clock frequency.
   - clockMan1_CLOCK_SYS_GetLpoClockFreq -Gets the LPO clock frequency.
   - clockMan1_CLOCK_SYS_SetSystickSrc -Sets the Systick clock source SYST_CSR[CLKSOURCE].
   - clockMan1_CLOCK_SYS_GetSystickFreq -Gets the Systick clock frequency.

Module "pin_init"  (component PinSettings)
   - pin_init_hardware_init -This method configures registers according to settings of routing and electrical features. It 
                provides pin initialization for selected pins during processor start-up. Selected pins are either user selected 
                pins or pins selected in pin properties in components.  Only pins of devices  enabled for auto initialization 
                are handled within this method.
   - pin_init_init_gpio_pins -GPIO method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                GPIOA, GPIOB, GPIOC, GPIOD, GPIOE peripherals.
   - pin_init_deinit_gpio_pins -GPIO method de-configures registers according to settings of routing. This method is enabled 
                only if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or 
                pins selected in pin items in components. Call this method code to un-route desired pins into GPIOA, GPIOB, 
                GPIOC, GPIOD, GPIOE peripherals.
   - pin_init_init_osc_pins -OSC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                OSC0 peripheral.
   - pin_init_deinit_osc_pins -OSC method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into OSC0 peripheral.
   - pin_init_init_rcm_pins -RCM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into RCM 
                peripheral.
   - pin_init_deinit_rcm_pins -RCM method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into RCM peripheral.
   - pin_init_init_spi_pins -SPI method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                SPI0, SPI1 peripherals.
   - pin_init_deinit_spi_pins -SPI method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into SPI0, SPI1 peripherals.
   - pin_init_init_swd_pins -SWD method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into SWD 
                peripheral.
   - pin_init_deinit_swd_pins -SWD method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into SWD peripheral.
   - pin_init_init_tpm_pins -TPM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                TPM0, TPM1, TPM2 peripherals.
   - pin_init_deinit_tpm_pins -TPM method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into TPM0, TPM1, TPM2 
                peripherals.
   - pin_init_init_uart0_pins -UART0 method configures registers according to settings  of routing and electrical features. 
                This method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either 
                user selected pins or pins selected in pin items in components. Call this method code to route desired pins 
                into UART0 peripheral.
   - pin_init_deinit_uart0_pins -UART0 method de-configures registers according to settings of routing. This method is enabled 
                only if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or 
                pins selected in pin items in components. Call this method code to un-route desired pins into UART0 peripheral.

Module "intMan"    (component fsl_interrupt_manager)
   - intMan_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan_INT_SYS_DisableIRQGlobal -Disable system interrupt.

Module "osa1"      (component fsl_os_abstraction)
   - osa1_OSA_SemaCreate -Creates a semaphore with a given value.
   - osa1_OSA_SemaWait -Pending a semaphore with timeout.
   - osa1_OSA_SemaPost -Signals for someone waiting on the semaphore to wake up.
   - osa1_OSA_SemaDestroy -Destroys a previously created semaphore.
   - osa1_OSA_MutexCreate -Create an unlocked mutex.
   - osa1_OSA_MutexLock -Waits for a mutex and locks it.
   - osa1_OSA_MutexUnlock -Unlocks a previously locked mutex.
   - osa1_OSA_MutexDestroy -Destroys a previously created mutex.
   - osa1_OSA_EventCreate -Initializes an event object with all flags cleared.
   - osa1_OSA_EventWait -Waits for specified event flags to be set.
   - osa1_OSA_EventSet -Sets one or more event flags.
   - osa1_OSA_EventClear -Clears one or more flags.
   - osa1_OSA_EventGetFlags -Gets event flags status.
   - osa1_OSA_EventDestroy -Destroys a previously created event object.
   - osa1_OSA_TaskCreate -Creates a task.
   - osa1_OSA_TaskDestroy -Destroys a previously created task.
   - osa1_OSA_TaskYield -Puts the active task to the end of scheduler's queue.
   - osa1_OSA_TaskGetHandler -Gets the handler of active task.
   - osa1_OSA_TaskGetPriority -Gets the priority of a task.
   - osa1_OSA_TaskSetPriority -Sets the priority of a task.
   - osa1_OSA_MsgQCreate -Initializes a message queue.
   - osa1_OSA_MsgQPut -Puts a message at the end of the queue.
   - osa1_OSA_MsgQGet -Reads and remove a message at the head of the queue.
   - osa1_OSA_MsgQDestroy -Destroys a previously created queue.
   - osa1_OSA_MemAlloc -Reserves the requested amount of memory in bytes.
   - osa1_OSA_MemAllocZero -Reserves the requested amount of memory in bytes and initializes it to 0.
   - osa1_OSA_MemFree -Releases the memory previously reserved.
   - osa1_OSA_TimeDelay -Delays execution for a number of milliseconds.
   - osa1_OSA_TimeGetMsec -Gets the current time since system boot in milliseconds.
   - osa1_OSA_InstallIntHandler -Installs the interrupt handler.
   - osa1_OSA_EnterCritical -Enters the critical section to ensure some code is not preempted.
   - osa1_OSA_ExitCritical -Exits the critical section.
   - osa1_OSA_Init -Initializes the RTOS services.
   - osa1_OSA_Start -Starts the RTOS.

Module "rtcTimer"  (component fsl_rtc)
   - rtcTimer_RTC_DRV_Init -Initializes the RTC module.
   - rtcTimer_RTC_DRV_Deinit -Disables the RTC module clock gate control.
   - rtcTimer_RTC_DRV_SetDatetime -Sets the RTC date and time according to the given time structure.
   - rtcTimer_RTC_DRV_GetDatetime -Gets the RTC time and stores it in the given time structure.
   - rtcTimer_RTC_DRV_SetAlarm -Sets the RTC alarm time and enables the alarm interrupt.
   - rtcTimer_RTC_DRV_GetAlarm -Returns the RTC alarm time.
   - rtcTimer_RTC_DRV_InitRepeatAlarm -Initializes the RTC repeat alarm state structure.
   - rtcTimer_RTC_DRV_SetAlarmRepeat -Sets an alarm that is periodically repeated.
   - rtcTimer_RTC_DRV_DeinitRepeatAlarm -Deinitializes the RTC repeat alarm state structure.
   - rtcTimer_RTC_IRQHandler -Implements the RTC alarm handler named in the startup code.
   - rtcTimer_RTC_Seconds_IRQHandler -Implements the RTC seconds handler named in the startup code.
   - rtcTimer_RTC_DRV_IsCounterEnabled -Checks whether the RTC is enabled.
   - rtcTimer_RTC_DRV_SetSecsIntCmd -Enables or disables the RTC seconds interrupt.
   - rtcTimer_RTC_DRV_SetAlarmIntCmd -Enables or disables the alarm interrupt.
   - rtcTimer_RTC_DRV_GetAlarmIntCmd -Reads the alarm interrupt.
   - rtcTimer_RTC_DRV_IsAlarmPending -Reads the alarm status to see if the alarm is triggered.
   - rtcTimer_RTC_DRV_SetTimeCompensation -Writes the compensation value to the RTC compensation register.
   - rtcTimer_RTC_DRV_GetTimeCompensation -Reads the compensation value from the RTC compensation register.
   - rtcTimer_RTC_DRV_AlarmIntAction -Action to take when an RTC alarm interrupt is triggered. To receive alarms periodically, 
                the RTC_TAR register is updated using the repeat interval.
   - rtcTimer_RTC_DRV_SecsIntAction -Action to take when an RTC seconds interrupt is triggered.

Module "tpmTmr1"   (component fsl_tpm)
   - tpmTmr1_TPM_DRV_Init -Initializes the TPM driver.
   - tpmTmr1_TPM_DRV_PwmStop -Stops the channel PWM.
   - tpmTmr1_TPM_DRV_PwmStart -Configures the duty cycle and frequency and starts outputting PWM on a specified channel.
   - tpmTmr1_TPM_DRV_SetTimeOverflowIntCmd -Enables or disables the timer overflow interrupt.
   - tpmTmr1_TPM_DRV_SetChnIntCmd -Enables or disables the channel interrupt.
   - tpmTmr1_TPM_DRV_SetClock -Sets the TPM clock source.
   - tpmTmr1_TPM_DRV_GetClock -Gets the TPM clock frequency.
   - tpmTmr1_TPM_DRV_CounterStart -Starts the TPM counter.
   - tpmTmr1_TPM_DRV_CounterStop -Stops the TPM counter.
   - tpmTmr1_TPM_DRV_CounterRead -Reads back the current value of the TPM counter.
   - tpmTmr1_TPM_DRV_InputCaptureEnable -TPM input capture mode setup.
   - tpmTmr1_TPM_DRV_GetChnVal -Reads back the current value of the TPM channel value.
   - tpmTmr1_TPM_DRV_OutputCompareEnable -TPM output compare mode setup.
   - tpmTmr1_TPM_DRV_Deinit -Shuts down the TPM driver.
   - tpmTmr1_TPM_DRV_IRQHandler -Action to take when an TPM interrupt is triggered.

Module "tpmTmr2"   (component fsl_tpm)
   - tpmTmr2_TPM_DRV_Init -Initializes the TPM driver.
   - tpmTmr2_TPM_DRV_PwmStop -Stops the channel PWM.
   - tpmTmr2_TPM_DRV_PwmStart -Configures the duty cycle and frequency and starts outputting PWM on a specified channel.
   - tpmTmr2_TPM_DRV_SetTimeOverflowIntCmd -Enables or disables the timer overflow interrupt.
   - tpmTmr2_TPM_DRV_SetChnIntCmd -Enables or disables the channel interrupt.
   - tpmTmr2_TPM_DRV_SetClock -Sets the TPM clock source.
   - tpmTmr2_TPM_DRV_GetClock -Gets the TPM clock frequency.
   - tpmTmr2_TPM_DRV_CounterStart -Starts the TPM counter.
   - tpmTmr2_TPM_DRV_CounterStop -Stops the TPM counter.
   - tpmTmr2_TPM_DRV_CounterRead -Reads back the current value of the TPM counter.
   - tpmTmr2_TPM_DRV_InputCaptureEnable -TPM input capture mode setup.
   - tpmTmr2_TPM_DRV_GetChnVal -Reads back the current value of the TPM channel value.
   - tpmTmr2_TPM_DRV_OutputCompareEnable -TPM output compare mode setup.
   - tpmTmr2_TPM_DRV_Deinit -Shuts down the TPM driver.
   - tpmTmr2_TPM_DRV_IRQHandler -Action to take when an TPM interrupt is triggered.

Module "tempSensor" (component OS_Task)
   - tempSensor_Init -Creates and starts a task.

Module "DbgCs"     (component fsl_debug_console)
   - DbgCs_DbgConsole_Init -Init the UART/LPUART used for debug messages.
   - DbgCs_DbgConsole_DeInit -Deinit the UART/LPUART used for debug messages.
   - DbgCs_debug_printf -Prints formatted output to the standard output stream.
   - DbgCs_debug_putchar -Writes a character to stdout.
   - DbgCs_debug_scanf -Reads formatted data from the standard input stream.
   - DbgCs_debug_getchar -Reads a character from standard input.

Module "Radio"     (component OS_Task)
   - Radio_Init -Creates and starts a task.

Module "spiTemp"   (component fsl_spi)
   - spiTemp_SPI_DRV_IRQHandler -The function SPI_DRV_IRQHandler passes IRQ control to either the master or slave driver.
   - spiTemp_SPI_DRV_MasterInit -Initializes an SPI instance for master mode operation.
   - spiTemp_SPI_DRV_MasterDeinit -Shuts down an SPI instance.
   - spiTemp_SPI_DRV_MasterConfigureBus -Configures the SPI port to access a device on the bus.
   - spiTemp_SPI_DRV_MasterTransferBlocking -Performs a blocking SPI master mode transfer.
   - spiTemp_SPI_DRV_MasterTransfer -Performs a non-blocking SPI master mode transfer.
   - spiTemp_SPI_DRV_MasterGetTransferStatus -Returns whether the previous transfer is completed.
   - spiTemp_SPI_DRV_MasterAbortTransfer -Terminates an asynchronous transfer early.
   - spiTemp_SPI_DRV_MasterIRQHandler -Interrupt handler for SPI master mode. This handler uses the buffers stored in the 
                spi_master_state_t structs to transfer data.
   - spiTemp_SPI_DRV_SlaveInit -Initializes a SPI instance for a slave mode operation, using interrupt mechanism.
   - spiTemp_SPI_DRV_SlaveDeinit -Shuts down an SPI instance interrupt mechanism.
   - spiTemp_SPI_DRV_SlaveTransferBlocking -Transfers data on SPI bus using interrupt and a blocking call.
   - spiTemp_SPI_DRV_SlaveTransfer -Starts the transfer data on SPI bus using an interrupt and a non-blocking call.
   - spiTemp_SPI_DRV_SlaveAbortTransfer -Aborts the transfer that started by a non-blocking call transfer function.
   - spiTemp_SPI_DRV_SlaveGetTransferStatus -Returns whether the previous transfer is finished.
   - spiTemp_SPI_DRV_SlaveIRQHandler -SPI Slave Generic IRQ handler.

Module "gpio"      (component fsl_gpio)
   - gpio_GPIO_DRV_Init -Initializes all GPIO pins used by the board.
   - gpio_GPIO_DRV_InputPinInit -Initializes one GPIO input pin used by the board.
   - gpio_GPIO_DRV_OutputPinInit -Initializes one GPIO output pin used by the board.
   - gpio_GPIO_DRV_GetPinDir -Gets the current direction of the individual GPIO pin.
   - gpio_GPIO_DRV_SetPinDir -Sets the current direction of the individual GPIO pin.
   - gpio_GPIO_DRV_WritePinOutput -Sets the output level of the individual GPIO pin to the logic 1 or 0.
   - gpio_GPIO_DRV_SetPinOutput -Sets the output level of the individual GPIO pin to the logic 1.
   - gpio_GPIO_DRV_ClearPinOutput -Sets the output level of the individual GPIO pin to the logic 0.
   - gpio_GPIO_DRV_TogglePinOutput -Reverses current output logic of the individual GPIO pin.
   - gpio_GPIO_DRV_ReadPinInput -Reads the current input value of the individual GPIO pin.
   - gpio_GPIO_DRV_IsPinIntPending -Reads the individual pin-interrupt status flag.
   - gpio_GPIO_DRV_ClearPinIntFlag -Clears the individual GPIO pin interrupt status flag.

Module "spiRadio"  (component fsl_spi)
   - spiRadio_SPI_DRV_IRQHandler -The function SPI_DRV_IRQHandler passes IRQ control to either the master or slave driver.
   - spiRadio_SPI_DRV_MasterInit -Initializes an SPI instance for master mode operation.
   - spiRadio_SPI_DRV_MasterDeinit -Shuts down an SPI instance.
   - spiRadio_SPI_DRV_MasterConfigureBus -Configures the SPI port to access a device on the bus.
   - spiRadio_SPI_DRV_MasterTransferBlocking -Performs a blocking SPI master mode transfer.
   - spiRadio_SPI_DRV_MasterTransfer -Performs a non-blocking SPI master mode transfer.
   - spiRadio_SPI_DRV_MasterGetTransferStatus -Returns whether the previous transfer is completed.
   - spiRadio_SPI_DRV_MasterAbortTransfer -Terminates an asynchronous transfer early.
   - spiRadio_SPI_DRV_MasterIRQHandler -Interrupt handler for SPI master mode. This handler uses the buffers stored in the 
                spi_master_state_t structs to transfer data.
   - spiRadio_SPI_DRV_SlaveInit -Initializes a SPI instance for a slave mode operation, using interrupt mechanism.
   - spiRadio_SPI_DRV_SlaveDeinit -Shuts down an SPI instance interrupt mechanism.
   - spiRadio_SPI_DRV_SlaveTransferBlocking -Transfers data on SPI bus using interrupt and a blocking call.
   - spiRadio_SPI_DRV_SlaveTransfer -Starts the transfer data on SPI bus using an interrupt and a non-blocking call.
   - spiRadio_SPI_DRV_SlaveAbortTransfer -Aborts the transfer that started by a non-blocking call transfer function.
   - spiRadio_SPI_DRV_SlaveGetTransferStatus -Returns whether the previous transfer is finished.
   - spiRadio_SPI_DRV_SlaveIRQHandler -SPI Slave Generic IRQ handler.

Module "Shell"     (component OS_Task)
   - Shell_Init -Creates and starts a task.

Module "Cpu"       (component MKL25Z128LK4_4SDK)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.

===================================================================================
